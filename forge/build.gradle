plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

version = project.mod_version + "-" + project.minecraft_version + "-forge"
group = project.mod_group_id

base {
    archivesName = project.mod_id
}

minecraft {
    
    mappings channel: 'official', version: project.minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    copyIdeResources = true
    
    runs {
        
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        client {
            
            property 'forge.enabledGameTestNamespaces', project.mod_id
        }
        data {
            
            workingDirectory project.file('run-data')
            
            args '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
}

sourceSets {
    main {
        java {
            srcDir "../src/main/java"
        }
        resources {
            srcDir "../src/main/resources"
            srcDir "src/generated/resources"
        }
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
        mod_version : project.mod_version,
        forge_version_range : project.forge_version_range,
        minecraft_version_range : project.forge_minecraft_version_range,
        forge_loader_version_range : project.forge_loader_version_range,
        pack_format_number: pack_format_number,
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

java.withSourcesJar()

jar {
    from("../LICENSE") {
    }
}
