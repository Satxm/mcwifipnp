plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.14,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = project.mod_version + "-" + project.minecraft_version + "-forge"
group = project.maven_group

base {
    archivesName = project.mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    
    mappings channel: 'official', version: project.minecraft_version
    
    copyIdeResources = true
    
    runs {
        
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        client {
            
            property 'forge.enabledGameTestNamespaces', mod_id
        }
        
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }
        data {
            
            workingDirectory project.file('run-data')
            
            args '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
    
}
dependencies {
    
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
    implementation 'org.spongepowered:mixin:0.8.2'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

sourceSets {
	main {
		java {
			srcDir "../src/main/java"
		}
		resources {
			srcDir "../src/main/resources"
		}
	}
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
        mod_version : project.mod_version,
        forge_version_range : project.forge_version_range,
        minecraft_version_range : project.forge_minecraft_version_range,
        forge_loader_version_range : project.forge_loader_version_range,
        pack_format_number: pack_format_number,
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : "LAN World Plug-n-Play",
                'Specification-Vendor'    : "Satxm",
                'Specification-Version'   : '1', 
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : "${version}",
                'Implementation-Vendor'   : "Satxm",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    
    finalizedBy 'reobfJar'
}

jar {
	from("../LICENSE") {
	}
}

java {
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
	it.options.release = 17
}

mixin {
    config 'mcwifipnp.mixins.json'
    disableAnnotationProcessorCheck()
}
